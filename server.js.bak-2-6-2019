/* Setting things up. */

var exclusion_list = ["AnimalistesCAT","Eduard_Font","carquinyolista"];
      
var path = require('path'),
    express = require('express'),
    app = express(),   
    Twit = require('twit'),
    format = require('date-format'),
    moment = require('moment'),
    config = {
    /* Be sure to update the .env file with your API keys. See how to get them: https://botwiki.org/tutorials/how-to-create-a-twitter-app */      
      twitter: {
        consumer_key: process.env.CONSUMER_KEY,
        consumer_secret: process.env.CONSUMER_SECRET,
        access_token: process.env.ACCESS_TOKEN,
        access_token_secret: process.env.ACCESS_TOKEN_SECRET
      }
    },
    Twitter = new Twit(config.twitter);


app.use(express.static('public'));

/* You can use cron-job.org, uptimerobot.com, or a similar site to hit your /BOT_ENDPOINT to wake up your app and make your Twitter bot tweet. */

app.all("/" + process.env.BOT_ENDPOINT, function (req, res) {
  

  //////////////////////////

  
  //CATALUNYA
  
    var catalunyaRecursive = function () {
      
      var retweetId = null;
      var retweetDate = null; 
      var currentDate = null;
      var currentScreenName = null;
      var next_cursor = -1;  
      var i = 0;
      var params = {
          q: '(#XarxaAnimalistaCat OR #XarxaDespla√ßatsCat)-(#XarxaCatCentral OR #XarxaCatcentralPerduts)', // Hashtags to search tweets within
          result_type: 'mixed',
          count: '100',
          max_id:'9999999999999999999',

      }
      
      console.log("SEARCH QUERY :: "+params.q+"\n\nRESULTS PAGE# "+i/100+"\n");
      
      Twitter.get('search/tweets', params, function getList(err, data) {

          if (err) {console.error('Error during tweet search call :: ' + err);}

          else {
            var n = 0;
            while (n < data.statuses.length) {

              retweetId = data.statuses[n].id_str;
              retweetDate = data.statuses[n].created_at; 
              currentDate = format(new Date());  
              next_cursor = data.statuses[n].id_str;
              currentScreenName = data.statuses[n].user.screen_name;

              console.log("SEARCH RESULT #" + i + " :: "+retweetId+" :: "+currentScreenName);

              // IF SCREEN_NAME IS IN THE EXCLUSION LIST ARRAY, THEN SKIP RT 

              if (exclusion_list.includes(currentScreenName)==true) { 
                console.error('ERROR: This tweet ('+retweetId+') belongs to an excluded user ('+currentScreenName+'). Skipping... '); 
              }            
              else {
                Twitter.post('statuses/retweet/'+retweetId, function (err, response) {

                    if (err) { console.error('ERROR: Problem when retweeting :: '+err); }
                    else { console.log(params.q + ' Retweeted!! '+ response.retweeted_status.user); }

                });
              }

            i++;
            n++;

          }
        }
        console.log("\nTOTAL TWEETS IN CURRENT PAGE --> "+n);

        console.log("\nNEXT CURSOR --> "+next_cursor);
        
        // DO NOT RETWEET TWEETS OLDER THAN ONE DAY (EXIT PROGRAM WHEN FOUND)
        
        var retweetDateFormatted = format(new Date(parseTwitterDate(retweetDate)));
        
        console.log("\nCURRENT DATE --> "+currentDate);
        console.log("NEXT CURSOR DATE --> "+retweetDateFormatted);

        var localTime = moment(currentDate);
        var otherTime = moment(retweetDateFormatted);

        console.log("\nCurrent datetime is older than tweet date ->" + retweetDateFormatted + " by 1 days? = " + (localTime.diff(otherTime, 'days') >= 1));

        if ((localTime.diff(otherTime, 'days') >= 1)==true) { next_cursor = -1; }

        if(next_cursor != -1 || i < 5) 
        {
          params.max_id = next_cursor;
          
          Twitter.get('search/tweets',params, getList);
        }
        else {
          console.log("5th PAGE OF RESULTS SET *OR* TWEET OLDER THAN ONE DAY REACHED.");
        }
      });
      
  };
  
  //FUNCTIONS

  function parseTwitterDate(aDate)
  {   
    return new Date(Date.parse(aDate.replace(/( \+)/, ' UTC$1')));
    //sample: Wed Mar 13 09:06:07 +0000 2013 
  }
  
  ///////////////////
  //FUNCTION CALLS// 
  /////////////////
  
  catalunyaRecursive();
});

var listener = app.listen(process.env.PORT, function () {
  console.log('Your bot is running on port ' + listener.address().port);
});